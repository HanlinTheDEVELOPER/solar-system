name: Reuse Deployment
on:
  workflow_call:
    inputs:
      mongo-uri:
        required: true
        type: string
      k8s-manifest-path:
        type: string
        default: kubernetes
      deploy-env:
        required: true
        type: string
    secrets:
      kubesailconfig:
        required: true
    outputs:
      deployed-url:
        value: ${{jobs.reuse-deployment.outputs.deployed-url}}
      deployed-to:
        value: ${{jobs.reuse-deployment.outputs.deployed-to}}

jobs:
  reuse-deployment:
    environment:
      name: ${{ inputs.deploy-env }}
      url: ${{ steps.set-app-ingress-address.outputs.APP_INGRESS_ADDRESS }}
    runs-on: ubuntu-latest
    outputs:
      deployed-url: ${{ steps.set-app-ingress-address.outputs.APP_INGRESS_ADDRESS }}
      deployed-to: ${{ inputs.deploy-env }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Kubectl
        uses: azure/setup-kubectl@v3

      - name: Kubectl Config
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{secrets.kubesailconfig}}

      - name: Check Kubectl
        run: |
          kubectl version
          echo -------------------
          kubectl get nodes
          echo -------------------

      # - name: Set Ingress Ip as GitHub Env Variable
      #   run: |
      #     echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller  -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV

      - name: Replace Placeholder in yaml
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: "_{_"
          tokenSuffix: "_}_"
          files: "${{inputs.k8s-manifest-path}}/*.yaml"
        env:
          NAMESPACE: ${{vars.NAMESPACE}}
          REPLICAS: ${{vars.REPLICAS}}
          IMAGE: ${{vars.DOCKER_USERNAME}}/solar-system:${{github.sha}}
          INGRESS_IP: ${{vars.INGRESS_IP}}
      - name: Check yaml
        run: |
          cat ${{inputs.k8s-manifest-path}}/deployment.yaml
      - name: Create NameSpace Secrect
        run: |
          kubectl create secret generic mongo-db-creds \
          --from-literal=MONGO_URI=${{inputs.mongo-uri}} -n ${{vars.NAMESPACE}} \
          --dry-run=client -o yaml | kubectl apply -f -
      - name: Deploy
        run: |
          kubectl apply -f ${{inputs.k8s-manifest-path}}
      - name: Set App Ingress Address
        id: set-app-ingress-address
        run: |
          echo APP_INGRESS_ADDRESS=$(kubectl get ingress -n ${{vars.NAMESPACE}} -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}')
