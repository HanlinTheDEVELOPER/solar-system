name: Solar System Workflow

on:
  workflow_dispatch:
    # inputs:
    #   branch:
    #     description: "Branch to test"
    #     required: true
    #     default: "main"
  push:
    branches:
      - main
      - "features/*"

env:
  MONGO_URI: mongodb+srv://${{vars.MONGO_USER}}:${{secrets.MONGO_PASSWORD}}@supercluster.d83jj.mongodb.net/superData

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [20]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Caching Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        run: npm test

      - name: Archive Test Result
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mocha-Test-Result
          path: test-results.xml
          retention-days: 1

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup NodeJS Version 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Caching Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Code Coverage
        run: npm run coverage
        continue-on-error: true

      - name: Archive Code Coverage Result
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 1
  docker:
    name: Containerization
    runs-on: ubuntu-latest
    needs: [unit-testing, code-coverage]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{vars.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Docker Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{vars.DOCKER_USERNAME}}/solar-system:${{github.sha}}

      - name: Docker Image Testing
        run: |
          docker run --name solar-sys-container -d \
            -p 3000:3000 \
            -e MONGO_URI=${{env.MONGO_URI}} \
            ${{vars.DOCKER_USERNAME}}/solar-system:${{github.sha}} \

          echo Testing server with wget
          wget -q -O - 127.0.0.1:3000/live | grep live
